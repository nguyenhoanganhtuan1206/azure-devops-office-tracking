pr:
  branches:
    include:
      - features/**

resources:
- repo: self

parameters:
  - name: vmImageName
    type: string
    default: 'ubuntu-latest'

variables:
  tag: '$(Build.BuildId)'
    
  # Agent VM image name
  vmImageName: 'ubuntu-latest'
    
stages:
- stage: Build
  jobs:
    - template: templates/build-app/app/templates-build-application.yml
      parameters:
        vmImageName: $(vmImageName)

- stage: Deploy_Dev
  displayName: 'Deploy to Dev environment'
  dependsOn: Build
  condition: succeeded()

  jobs:
    - job: Build_Env_File
      steps:
      - script: |
          az login --tenant 9f287bec-ff90-4d47-a0ae-c98298d569aa
          echo "Retrieving secrets..."
          echo "DB_CONNECTION_STRING=$(az keyvault secret show --name DB-CONNECT-STRING --vault-name office-tracking-keyvault --query value -o tsv)" >> .env.sample
          echo "CLOUDINARY_NAME=$(az keyvault secret show --name CLOUDINARY-NAME --vault-name office-tracking-keyvault --query value -o tsv)" >> .env.sample
          echo "CLOUDINARY_SECRET=$(az keyvault secret show --name CLOUDINARY-SECRET --vault-name office-tracking-keyvault --query value -o tsv)" >> .env.sample
          echo "CLOUDINARY_KEY=$(az keyvault secret show --name CLOUDINARY-KEY --vault-name office-tracking-keyvault --query value -o tsv)" >> .env.sample
          echo "SENDER_EMAIL_USERNAME=$(az keyvault secret show --name SENDER-EMAIL-USERNAME --vault-name office-tracking-keyvault --query value -o tsv)" >> .env.sample
          echo "SENDER_EMAIL_PASSWORD=$(az keyvault secret show --name SENDER-EMAIL-PASSWORD --vault-name office-tracking-keyvault --query value -o tsv)" >> .env.sample
          echo "API_ALLOW_HOSTS=$(az keyvault secret show --name API-ALLOW-HOSTS --vault-name office-tracking-keyvault --query value -o tsv)" >> .env.sample
          echo "HISTORY_CREATE_TIME=$(az keyvault secret show --name HISTORY-CREATE-TIME --vault-name office-tracking-keyvault --query value -o tsv)" >> .env.sample
          echo "HISTORY_UPDATE_TIME=$(az keyvault secret show --name HISTORY-UPDATE-TIME --vault-name office-tracking-keyvault --query value -o tsv)" >> .env.sample
          echo "SCHEDULE_TIME_ZONE=$(az keyvault secret show --name SCHEDULE-TIME-ZONE --vault-name office-tracking-keyvault --query value -o tsv)" >> .env.sample


            echo "List all folder ..."
            ls -la 
            cat .env.sample
        displayName: 'Retrieving secrets and create .env file'

    - deployment: Deploy
      pool:
        vmImage: ${{ parameters.vmImageName }}
      environment: test
      dependsOn: Build_Env_File
      variables:
        - group: 'Release'
      strategy:
        runOnce:
          deploy:
            steps:
            - download: current 
              name: drop
              displayName: Download Artifact

            - script: |
                chmod +x /home/vsts/work/1/drop/build/libs/office-tracking-0.0.1-SNAPSHOT.jar
              displayName: Grant permission

            - task: AzureWebAppContainer@1
              inputs:
                appName: $(WebAppDev)
                azureSubscription: myARMServiceConnection
                containers: 'officetrackingcr.azurecr.io/officetrackingdocker:latest'
                containerCommand: 'java -jar /home/vsts/work/1/drop/build/libs/office-tracking-0.0.1-SNAPSHOT.jar'